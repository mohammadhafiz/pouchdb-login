{"version":3,"sources":["functions.js","application.js","settings.js","login.js","en.js","ms.js","login_controller.js","api.js","auth.js","http_interceptor.js"],"names":["w","a","encrypt","m","k","element","document","injector","get","e","CryptoJS","AES","toString","decrypt","d","enc","Utf8","window","angular","application","module","config","$httpProvider","defaults","headers","post","Content-Type","put","delete","interceptors","push","$mdThemingProvider","alwaysWatchTheme","theme","primaryPalette","accentPalette","default","$translateProvider","useSanitizeValueStrategy","preferredLanguage","$locationProvider","$routeProvider","html5Mode","hashPrefix","otherwise","redirectTo","run","$location","$rootScope","Auth","$on","event","current","previous","rejection","path","forget","factory","settings","when","controller","templateUrl","resolve","isGuest","translations","action_back","action_cancel","action_change_password","action_create","action_create_client","action_create_council","action_create_grant","action_create_scope","action_create_user","action_delete","action_filter","action_hide","action_login","action_logout","action_menu","action_more","action_register","action_reset","action_search","action_select_person","action_submit","action_update","action_update_client","action_update_grant","action_update_scope","dialog_content_delete_record","dialog_title_delete_record","label_code","label_created_at","label_current_password","label_description","label_grant","label_id","label_name","label_new_password","label_retype_password","label_password","label_password_confirmation","label_scope","label_secret","label_updated_at","label_username","message_change_password","message_empty_grant","message_empty_scope","placeholder","title_access_control","title_administration","title_all","title_arrears","title_arrears_management","title_assigned","title_cases","title_change_password","title_client_grants","title_client_scopes","title_client_management","title_council","title_data_maintenance","title_defaulter","title_details","title_download","title_filter","title_first_reminder","title_grant_management","title_grants","title_history","title_login","title_menu","title_modules","title_notice","title_owner","title_property","title_record_count","title_scope_management","title_scopes","title_second_reminder","title_settings","title_third_reminder","title_unassigned","title_upload","title_users","title_user_management","title_workforce_management","toast_incorrect_credentials","toast_invalid_refresh_token","toast_method_not_allowed","toast_validation_failed","validation_maxlength_24","validation_maxlength_255","validation_maxlength_40","validation_minlength_4","validation_required","$scope","pouchDB","PouchDB","Settings","api","access_token","session","users","endpoint","host","concat","$http","$q","$window","API","auth","deferred","defer","localStorage","removeItem","promise","handler","response","expires_in","data","refresh_token","token_type","id","hasOwnProperty","fromJson","isLogged","then","reject","refresh","grant_type","client_id","client_secret","scope","scopes","join","console","info","toJson","type","verify","credentials","user_id","user_secret","username","password","$injector","$translate","refreshPromise","httpInterceptor","request","Authorization","responseError","error","status","text","$mdToast","toast","simple","content","position","show","message"],"mappings":"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","file":"application.min.js","sourcesContent":["(function(w, a)\r\n{\r\n    w.encrypt = function(m, k)\r\n    {\r\n        k = typeof k === 'undefined' ? a.element(document).injector().get('secret') : k;\r\n        var e = w.CryptoJS.AES.encrypt(m, k);\r\n        return e.toString();\r\n    };\r\n\r\n    w.decrypt = function(m, k)\r\n    {\r\n        k = typeof k === 'undefined' ? a.element(document).injector().get('secret') : k;\r\n        var d = w.CryptoJS.AES.decrypt(m, k);\r\n        return d.toString(w.CryptoJS.enc.Utf8);\r\n    };\r\n})(window, angular);\r\n","var application = angular.module('application', [\r\n    'm',\r\n    'ngAnimate',\r\n    'ngAria',\r\n    'ngMaterial',\r\n    'ngMessageFormat',\r\n    'ngMessages',\r\n    'ngResource',\r\n    'ngRoute',\r\n    'ngSanitize',\r\n    'pouchdb',\r\n    'yaru22.angular-timeago',\r\n    'pascalprecht.translate', // angular-translate\r\n    'application.templates', // application templates cache\r\n]);\r\n\r\napplication.config(['$httpProvider',\r\n    function($httpProvider)\r\n    {\r\n        $httpProvider.defaults.headers = {\r\n            post: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            put: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            delete: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        $httpProvider.interceptors.push('HttpInterceptor');\r\n    }]);\r\n\r\napplication.config(['$mdThemingProvider',\r\n    function($mdThemingProvider)\r\n    {\r\n        $mdThemingProvider.alwaysWatchTheme(true);\r\n        \r\n        $mdThemingProvider.theme('cyan')\r\n            .primaryPalette('cyan')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('purple')\r\n            .primaryPalette('purple')\r\n            .accentPalette('indigo');\r\n\r\n        $mdThemingProvider.theme('red')\r\n            .primaryPalette('red')\r\n            .accentPalette('indigo');\r\n\r\n        $mdThemingProvider.theme('teal')\r\n            .primaryPalette('teal')\r\n            .accentPalette('indigo');\r\n            \r\n        $mdThemingProvider.theme('grey')\r\n            .primaryPalette('grey', {\r\n                default: '200',\r\n            })\r\n            .accentPalette('blue');\r\n\r\n        $mdThemingProvider.theme('white')\r\n            .primaryPalette('grey', {\r\n                default: '200',\r\n            })\r\n            .accentPalette('blue');\r\n    }]);\r\n\r\napplication.config(['$translateProvider',\r\n    function($translateProvider)\r\n    {\r\n        $translateProvider.useSanitizeValueStrategy('sanitize');\r\n        $translateProvider.preferredLanguage('en');\r\n    }]);\r\n\r\napplication.config(['$locationProvider', '$routeProvider',\r\n    function($locationProvider, $routeProvider)\r\n    {\r\n        $locationProvider.html5Mode(true)\r\n            .hashPrefix('!#');\r\n\r\n        $routeProvider.otherwise({\r\n                redirectTo: '/login',\r\n            });\r\n    }]);\r\n\r\napplication.run(['$location', '$rootScope', 'Auth',\r\n    function($location, $rootScope, Auth)\r\n    {\r\n        $rootScope.$on('$routeChangeError', function(event, current, previous, rejection)\r\n        {\r\n            switch (rejection) {\r\n                case 'auth.is_guest':\r\n                    $location.path('/messages');\r\n                    break;\r\n                case 'auth.is_logged':\r\n                    Auth.forget();\r\n                    break;\r\n            }\r\n        });\r\n    }]);\r\n","application.factory('Settings',\r\n    function()\r\n    {\r\n        var settings = {};\r\n        return settings;\r\n    });\r\n","application.config(['$routeProvider',\r\n    function($routeProvider)\r\n    {\r\n        $routeProvider\r\n            .when('/login', {\r\n                controller: 'LoginController',\r\n                templateUrl: 'login.html',\r\n                resolve: {\r\n                    isGuest: ['Auth', function(Auth)\r\n                    {\r\n                        return Auth.isGuest();\r\n                    }],\r\n                },\r\n            });\r\n    }]);\r\n","application.config(['$translateProvider',\r\n    function($translateProvider)\r\n    {\r\n        $translateProvider.translations('en', {\r\n            'action_back': 'Go back',\r\n            'action_cancel': 'Cancel',\r\n            'action_change_password': 'Update',\r\n            'action_create': 'Create',\r\n            'action_create_client': 'Create new client',\r\n            'action_create_council': 'Create new council',\r\n            'action_create_grant': 'Create new grant',\r\n            'action_create_scope': 'Create new scope',\r\n            'action_create_user': 'Create new user',\r\n            'action_delete': 'Delete',\r\n            'action_filter': 'Filter',\r\n            'action_hide': 'Hide',\r\n            'action_login': 'Log in',\r\n            'action_logout': 'Log out',\r\n            'action_menu': 'Menu',\r\n            'action_more': 'More',\r\n            'action_register': 'Register',\r\n            'action_reset': 'Reset',\r\n            'action_search': 'Search',\r\n            'action_select_person': 'Select Person',\r\n            'action_submit': 'Submit',\r\n            'action_update': 'Update',\r\n            'action_update_client': 'Update client',\r\n            'action_update_grant': 'Update grant',\r\n            'action_update_scope': 'Update scope',\r\n\r\n            'dialog_content_delete_record': 'Deleted record cannot be restored.',\r\n            'dialog_title_delete_record': 'Would you like to delete this record?',\r\n\r\n            'label_code': 'Code',\r\n            'label_created_at': 'Created At',\r\n            'label_current_password': 'Current Password',\r\n            'label_description': 'Description',\r\n            'label_grant': 'Grant',\r\n            'label_id': 'Identity',\r\n            'label_name': 'Name',\r\n            'label_new_password': 'New Password',\r\n            'label_retype_password': 'Re-Type Password',\r\n            'label_password': 'Password',\r\n            'label_password_confirmation': 'Password Confirmation',\r\n            'label_retype_password': 'Re-Type Password',\r\n            'label_scope': 'Scope',\r\n            'label_secret': 'Secret',\r\n            'label_updated_at': 'Updated At',\r\n            'label_username': 'Username',\r\n\r\n            'message_change_password': 'Your password has been changed',\r\n            'message_empty_grant': 'Empty grant list',\r\n            'message_empty_scope': 'Empty scope list',\r\n\r\n            'placeholder': 'Placeholder',\r\n\r\n            'title_access_control': 'Access Control',\r\n            'title_administration': 'Administration',\r\n            'title_all': 'All',\r\n            'title_arrears': 'Arrears',\r\n            'title_arrears_management': 'Arrears Management',\r\n            'title_assigned': 'Assigned',\r\n            'title_cases': 'Cases',\r\n            'title_change_password': 'Change Password',\r\n            'title_client_grants': 'Client Grants',\r\n            'title_client_scopes': 'Client Scopes',\r\n            'title_client_management': 'Client Management',\r\n            'title_council': 'Council',\r\n            'title_data_maintenance': 'Data Maintenance',\r\n            'title_defaulter': 'Defaulter',\r\n            'title_details': 'Details',\r\n            'title_download': 'Download',\r\n            'title_filter': 'Filter',\r\n            'title_first_reminder': 'First Reminder',\r\n            'title_grant_management': 'Grant Management',\r\n            'title_grants': 'Grants',\r\n            'title_history': 'History',\r\n            'title_login': 'Log In',\r\n            'title_menu': 'Menu',\r\n            'title_modules': 'Module List',\r\n            'title_notice': 'Notice',\r\n            'title_owner': 'Owner',\r\n            'title_property': 'Property',\r\n            'title_record_count': 'Showing total of {{ length }} record',\r\n            'title_scope_management': 'Scope Management',\r\n            'title_scopes': 'Scopes',\r\n            'title_second_reminder': 'Second Reminder',\r\n            'title_settings': 'Settings',\r\n            'title_third_reminder': 'Third Reminder',\r\n            'title_unassigned': 'Unassigned',\r\n            'title_upload': 'Upload',\r\n            'title_users': 'Users',\r\n            'title_user_management': 'User Management',\r\n            'title_workforce_management': 'Workforce Management',\r\n\r\n            'toast_incorrect_credentials': 'The user credentials is incorrect.',\r\n            'toast_invalid_refresh_token': 'The refresh token is invalid.',\r\n            'toast_method_not_allowed': 'Request to the resource is not allowed.',\r\n            'toast_validation_failed': 'Validation failed on server.',\r\n\r\n            'validation_maxlength_24': 'This field may not be greater than 24 characters.',\r\n            'validation_maxlength_255': 'This field may not be greater than 255 characters.',\r\n            'validation_maxlength_40': 'This field may not be greater than 40 characters.',\r\n            'validation_minlength_4': 'This field must be at least 4 characters.',\r\n            'validation_required': 'This field is required.',\r\n        });\r\n    }]);\r\n","application.config(['$translateProvider',\r\n    function($translateProvider)\r\n    {\r\n        $translateProvider.translations('ms', {\r\n        \r\n            'toast_incorrect_credentials': 'The user credentials is incorrect.',\r\n            'toast_invalid_refresh_token': 'The refresh token is invalid.',\r\n            'toast_method_not_allowed': 'Request to the resource is not allowed.',\r\n            'toast_validation_failed': 'Validation failed on server.',\r\n\r\n            'validation_maxlength_24': 'This field may not be greater than 24 characters.',\r\n            'validation_maxlength_255': 'This field may not be greater than 255 characters.',\r\n            'validation_maxlength_40': 'This field may not be greater than 40 characters.',\r\n            'validation_minlength_4': 'This field must be at least 4 characters.',\r\n            'validation_required': 'This field is required.',\r\n        });\r\n    }]);\r\n","application.controller('LoginController', ['$location', '$scope', 'pouchDB',\r\n    function($location, $scope, pouchDB)\r\n    {\r\n        \r\n    var db = new PouchDB('http://192.168.1.155:5984/chat');\r\n    \r\n    function register(text) {\r\n      var chat = {\r\n        _id: new Date().toISOString(),\r\n        _rev: password,\r\n        completed: false\r\n      };\r\n      db.put(caht, function callback(err, result) {\r\n        if (!err) {\r\n          console.log('Registration successfully!');\r\n        }\r\n      });\r\n    }\r\n            \r\n}]);\r\n","application.factory('API', ['Settings',\r\n    function(Settings)\r\n    {\r\n        var api = {};\r\n\r\n        api.access_token    = '/api/access_token';\r\n        api.session         = '/api/session';\r\n        api.users           = '/api/users/:user_id';\r\n\r\n        api.get = function(endpoint)\r\n        {\r\n            return Settings.host.concat(api[endpoint]);\r\n        };\r\n\r\n        return api;\r\n    }]);\r\n","application.factory('Auth', ['$http', '$location', '$q', '$window', 'API', 'Settings',\r\n    function($http, $location, $q, $window, API, Settings)\r\n    {\r\n        var auth = {};\r\n\r\n        auth.forget = function()\r\n        {\r\n            var deferred = $q.defer();\r\n\r\n            $window.localStorage.removeItem('expires_in');\r\n            $window.localStorage.removeItem('access_token');\r\n            $window.localStorage.removeItem('refresh_token');\r\n            $window.localStorage.removeItem('token_type');\r\n            $window.localStorage.removeItem('id');\r\n            $window.localStorage.removeItem('type');\r\n            $window.localStorage.removeItem('scopes');\r\n            $location.path('/login');\r\n\r\n            deferred.resolve();\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        auth.handler = function(response)\r\n        {\r\n            $window.localStorage.expires_in      = response.data.expires_in;\r\n            $window.localStorage.access_token    = response.data.access_token;\r\n            $window.localStorage.refresh_token   = response.data.refresh_token;\r\n            $window.localStorage.token_type      = response.data.token_type;\r\n            return response;\r\n        };\r\n\r\n        auth.id = function()\r\n        {\r\n            if (!$window.localStorage.hasOwnProperty('id')) {\r\n                return false;\r\n            }\r\n\r\n            return angular.fromJson($window.localStorage.id);\r\n        };\r\n\r\n        auth.isGuest = function()\r\n        {\r\n            var deferred = $q.defer();\r\n\r\n            auth.isLogged()\r\n                .then(function()\r\n                {\r\n                    deferred.reject('auth.is_guest');\r\n                })\r\n                .catch(function()\r\n                {\r\n                    deferred.resolve(true);\r\n                });\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        auth.isLogged = function()\r\n        {\r\n            var deferred = $q.defer();\r\n\r\n            if ($window.localStorage.hasOwnProperty('expires_in') &&\r\n                $window.localStorage.hasOwnProperty('access_token') &&\r\n                $window.localStorage.hasOwnProperty('refresh_token') &&\r\n                $window.localStorage.hasOwnProperty('token_type')) {\r\n                deferred.resolve(true);\r\n            } else {\r\n                deferred.reject('auth.is_logged');\r\n            }\r\n\r\n            return deferred.promise;\r\n        };\r\n\r\n        auth.refresh = function()\r\n        {\r\n            var data = {\r\n                grant_type: 'refresh_token',\r\n                client_id: Settings.client_id,\r\n                client_secret: Settings.client_secret,\r\n                scope: Settings.scopes.join(),\r\n                refresh_token: $window.localStorage.refresh_token,\r\n            };\r\n\r\n            return $http.post(API.get('access_token'), data)\r\n                .then(auth.handler);\r\n        };\r\n\r\n        auth.scopes = function()\r\n        {\r\n            if (!$window.localStorage.hasOwnProperty('scopes')) {\r\n                return false;\r\n            }\r\n\r\n            return angular.fromJson($window.localStorage.scopes);\r\n        };\r\n\r\n        auth.session = function()\r\n        {\r\n            return $http.get(API.get('session'))\r\n                .then(function(session)\r\n                {\r\n                    console.info(session);\r\n                    $window.localStorage.id = angular.toJson(session.data.id);\r\n                    $window.localStorage.type = angular.toJson(session.data.type);\r\n                    $window.localStorage.scopes = angular.toJson(session.data.scopes);\r\n                });\r\n        };\r\n\r\n        auth.type = function()\r\n        {\r\n            if (!$window.localStorage.hasOwnProperty('type')) {\r\n                return false;\r\n            }\r\n\r\n            return angular.fromJson($window.localStorage.type);\r\n        };\r\n\r\n        auth.verify = function(credentials)\r\n        {\r\n            var data = {\r\n                user_id: Settings.user_id,\r\n                user_secret: Settings.user_secret,\r\n                scope: Settings.scopes.join(),\r\n                username: credentials['username'],\r\n                password: credentials['password'],\r\n            };\r\n\r\n            return $http.post(API.get('access_token'), data)\r\n                .then(auth.handler);\r\n        };\r\n\r\n        return auth;\r\n    }]);\r\n\r\n","application.factory('HttpInterceptor', ['$injector', '$q', '$translate', '$window',\r\n    function($injector, $q, $translate, $window)\r\n    {\r\n        var refreshPromise = null;\r\n\r\n        var httpInterceptor = {};\r\n\r\n        httpInterceptor.request = function(config)\r\n        {\r\n            if ($injector.get('Auth').isLogged()) {\r\n                var token_type = $window.localStorage.token_type;\r\n                var access_token = $window.localStorage.access_token;\r\n                config.headers.Authorization = token_type + ' ' + access_token;\r\n            }\r\n\r\n            return config;\r\n        };\r\n\r\n        httpInterceptor.responseError = function(rejection)\r\n        {\r\n            console.error(rejection);\r\n\r\n            switch (rejection.status) {\r\n                case 401:\r\n                    refreshPromise = refreshPromise ? refreshPromise :\r\n                        $injector.get('Auth').refresh();\r\n\r\n                    return refreshPromise.finally(function()\r\n                        {\r\n                            refreshPromise = null;\r\n                        })\r\n                        .then(function()\r\n                        {\r\n                            return $injector.get('$http')(rejection.config);\r\n                        });\r\n\r\n                case 405:\r\n                    $translate('toast_method_not_allowed')\r\n                        .then(function(text)\r\n                        {\r\n                            var $mdToast = $injector.get('$mdToast');\r\n                            var toast = $mdToast.simple()\r\n                                .content(text)\r\n                                .position('bottom left right');\r\n                            $mdToast.show(toast);\r\n                        });\r\n\r\n                    return $q.reject(rejection);\r\n\r\n                case 422:\r\n                    $translate('toast_validation_failed')\r\n                        .then(function(text)\r\n                        {\r\n                            var $mdToast = $injector.get('$mdToast');\r\n                            var toast = $mdToast.simple()\r\n                                .content(text)\r\n                                .position('bottom left right');\r\n                            $mdToast.show(toast);\r\n                        });\r\n\r\n                    return $q.reject(rejection);\r\n\r\n                case 500:\r\n                    if (rejection.data.message == 'The user credentials were incorrect.') {\r\n                        $translate('toast_incorrect_credentials')\r\n                            .then(function(text)\r\n                            {\r\n                                var $mdToast = $injector.get('$mdToast');\r\n                                var toast = $mdToast.simple()\r\n                                    .content(text)\r\n                                    .position('bottom left right');\r\n                                $mdToast.show(toast);\r\n                            });\r\n\r\n                        return $q.reject(rejection);\r\n                    }\r\n\r\n                    if (rejection.data.message == 'The refresh token is invalid.') {\r\n                        $translate('toast_invalid_refresh_token')\r\n                            .then(function(text)\r\n                            {\r\n                                var $mdToast = $injector.get('$mdToast');\r\n                                var toast = $mdToast.simple()\r\n                                    .content(text)\r\n                                    .position('bottom left right');\r\n                                $mdToast.show(toast);\r\n                            });\r\n                    }\r\n\r\n                    $injector.get('Auth')\r\n                        .forget();\r\n\r\n                    return $q.reject(rejection);\r\n            }\r\n        };\r\n\r\n        return httpInterceptor;\r\n    }]);\r\n"],"sourceRoot":"/source/"}